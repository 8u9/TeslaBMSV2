
C:\Users\tomde\AppData\Local\Temp\arduino\sketches\95606B835E7967C51305A25BFF052F33/TeslaBMSV2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
000175c0 l    d  .fini	00000000 .fini
1fff8000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff8200 l    d  .dmabuffers	00000000 .dmabuffers
1fff83bc l    d  .usbbuffers	00000000 .usbbuffers
1fff8720 l    d  .data	00000000 .data
1fff9170 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 mk20dx128.c
0000acb0 l     F .text	0000000c startup_default_early_hook
0000acbc l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 register_tm_clones
00000434 l     F .text	00000000 frame_dummy
1fff9170 l     O .bss	00000000 object.0
000175b0 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 BMSModule.cpp
00000000 l    df *ABS*	00000000 BMSModuleManager.cpp
00000000 l    df *ABS*	00000000 Logger.cpp
00000000 l    df *ABS*	00000000 SerialConsole.cpp
00000000 l    df *ABS*	00000000 TeslaBMSV2.ino.cpp
00002d44 l     F .text	00000054 long map<unsigned short, int, int, int, int>(unsigned short, int, int, int, int, std::enable_if<std::is_integral<unsigned short>::value, void>::type*) [clone .isra.0]
00002d98 l     F .text	00000024 Print::println(char const*) [clone .isra.0]
000087fc l     F .text	00000048 _GLOBAL__sub_I_can
00008a82 l       .text	00000000 L_29753_delayMicroseconds
00000000 l    df *ABS*	00000000 ADC.cpp
00000000 l    df *ABS*	00000000 ADC_Module.cpp
00000000 l    df *ABS*	00000000 FlexCAN.cpp
00009e04 l     F .text	0000000c _GLOBAL__sub_I_Can0
00000000 l    df *ABS*	00000000 SPI.cpp
00009f74 l     F .text	00000038 _GLOBAL__sub_I__Z15_spi_dma_rxISR0v
00000000 l    df *ABS*	00000000 FilterOnePole.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00000000 l    df *ABS*	00000000 Print.cpp
0000a464 l     F .text	00000082 Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 analog.c
1fffba34 l     O .bss	00000001 analog_reference_internal
1fffba35 l     O .bss	00000001 calibrating
1fff88e0 l     O .data	00000001 analog_config_bits
1fff88e1 l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 eeprom.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pins_teensy.c
0000adbc l     F .text	00000002 dummy_isr
1fff8720 l     F .data	00000034 port_E_isr
1fff8754 l     F .data	00000034 port_D_isr
1fff8788 l     F .data	00000034 port_C_isr
1fff87bc l     F .data	00000034 port_B_isr
1fff87f0 l     F .data	00000034 port_A_isr
0000adc0 l     F .text	00000044 digitalWrite.part.0
0000af00 l     F .text	00000002 startup_default_middle_hook
1fff88e8 l     O .data	00000001 analog_write_res
00017008 l     O .text	00000014 CSWTCH.39
00000000 l    df *ABS*	00000000 serial2.c
1fffba3c l     O .bss	00000004 rts_pin
1fffba40 l     O .bss	00000040 rx_buffer
1fffba80 l     O .bss	00000001 rx_buffer_head
1fffba84 l     O .bss	00000004 rx_buffer_storage_
1fffba88 l     O .bss	00000001 rx_buffer_tail
1fffba8c l     O .bss	00000004 transmit_pin
1fffba90 l     O .bss	00000001 transmitting
1fffba94 l     O .bss	00000028 tx_buffer
1fffbabc l     O .bss	00000001 tx_buffer_head
1fffbac0 l     O .bss	00000004 tx_buffer_storage_
1fffbac4 l     O .bss	00000001 tx_buffer_tail
1fff89cc l     O .data	00000004 rts_high_watermark_
1fff89d0 l     O .data	00000004 rts_low_watermark_
1fff89d4 l     O .data	00000004 rx_buffer_total_size_
1fff89d8 l     O .data	00000001 rx_pin_num
1fff89dc l     O .data	00000004 tx_buffer_total_size_
1fff89e0 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serial3.c
0000bda8 l     F .text	000000ec serial3_putchar.part.0
1fffbac8 l     O .bss	00000004 rts_pin
1fffbacc l     O .bss	00000040 rx_buffer
1fffbb0c l     O .bss	00000001 rx_buffer_head
1fffbb10 l     O .bss	00000004 rx_buffer_storage_
1fffbb14 l     O .bss	00000001 rx_buffer_tail
1fffbb18 l     O .bss	00000004 transmit_pin
1fffbb1c l     O .bss	00000001 transmitting
1fffbb20 l     O .bss	00000028 tx_buffer
1fffbb48 l     O .bss	00000001 tx_buffer_head
1fffbb4c l     O .bss	00000004 tx_buffer_storage_
1fffbb50 l     O .bss	00000001 tx_buffer_tail
1fff89e4 l     O .data	00000004 rts_high_watermark_
1fff89e8 l     O .data	00000004 rts_low_watermark_
1fff89ec l     O .data	00000004 rx_buffer_total_size_
1fff89f0 l     O .data	00000004 tx_buffer_total_size_
1fff89f4 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 usb_dev.c
1fffbb54 l     O .bss	00000040 ep0_rx0_buf
1fffbb94 l     O .bss	00000040 ep0_rx1_buf
1fffbbd4 l     O .bss	00000001 ep0_tx_bdt_bank
1fffbbd5 l     O .bss	00000001 ep0_tx_data_toggle
1fffbbd6 l     O .bss	00000002 ep0_tx_len
1fffbbd8 l     O .bss	00000004 ep0_tx_ptr
1fffbbdc l     O .bss	00000008 reply_buffer
1fffbbe4 l     O .bss	00000010 rx_first
1fffbbf4 l     O .bss	00000010 rx_last
1fffbc04 l     O .bss	00000008 setup
1fffbc0c l     O .bss	00000010 tx_first
1fffbc1c l     O .bss	00000010 tx_last
1fffbc2c l     O .bss	00000004 tx_state
1fff8000 l     O .usbdescriptortable	000000a0 table
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mem.c
1fff8a08 l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_serial.c
1fffbc40 l     O .bss	00000004 rx_packet
1fffbc44 l     O .bss	00000001 transmit_previous_timeout
1fffbc45 l     O .bss	00000001 tx_noautoflush
1fffbc48 l     O .bss	00000004 tx_packet
00000000 l    df *ABS*	00000000 yield.cpp
1fffbc5d l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
1fff8a10 l     O .data	00000043 config_descriptor
1fff8a54 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 libm_a-wf_exp.o
00000000 l    df *ABS*	00000000 libm_a-wf_log.o
00000000 l    df *ABS*	00000000 libm_a-wf_pow.o
00000000 l    df *ABS*	00000000 libm_a-sf_finite.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-ef_exp.o
00000000 l    df *ABS*	00000000 libm_a-ef_log.o
00000000 l    df *ABS*	00000000 libm_a-ef_pow.o
00000000 l    df *ABS*	00000000 libm_a-sf_fabs.o
00000000 l    df *ABS*	00000000 libm_a-sf_scalbn.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
0000e2a4 l     F .text	00000012 with_errnof
0000e2b8 l     F .text	00000026 xflowf
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_unordsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000f7a4 l     F .text	00000018 stdio_exit_handler
0000f7bc l     F .text	00000040 cleanup_stdio
0000f7fc l     F .text	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0000fe5c l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 libc_a-atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fini.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00012930 l     F .text	00000128 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00013aa0 l     F .text	00000076 __sprint_r.part.0
00014a9c l     F .text	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00008e10 g     F .text	00000004 ADC_Module::getMaxValue()
1fff91ac g     O .bss	00000004 Charged
00007300 g     F .text	000000ac outputdebug()
0000aca8  w    F .text	00000006 adc0_isr
00002dbc g     F .text	00000180 loadSettings()
0000e778 g     F .text	0000002c .hidden __aeabi_dcmpun
0000cf20 g     F .text	0000002c usb_serial_available
000047d0 g     F .text	00002164 menu()
1fffb730 g     O .bss	00000004 pilottimer
000152b4 g     F .text	00000024 _isatty_r
0000e73c g     F .text	00000012 .hidden __aeabi_dcmple
0000e678 g     F .text	0000007a .hidden __cmpdf2
0000ad5c g     F .text	00000004 operator new[](unsigned int)
0000fc68 g     F .text	0000002c _lseek_r
0000d190  w    F .text	000000f0 yield
0000a32c  w    F .text	0000000c HardwareSerial3::write(unsigned char)
0000e678 g     F .text	0000007a .hidden __eqdf2
1fff8a6c g     O .data	00000018 usb_string_manufacturer_name_default
0000e60c g     F .text	0000005a .hidden __floatdidf
0000ac64  w    F .text	00000044 hard_fault_isr
0000a2f4 g     F .text	0000002c HardwareSerial3::begin(unsigned long)
0000aca8  w    F .text	00000006 dma_ch6_isr
00000764 g     F .text	00000006 BMSModule::getCUVCells()
1fffbde4 g     O .bss	00000001 __lock___atexit_recursive_mutex
00009e28  w    F .text	0000013c SPIClass::dma_rxisr()
00013910 g     F .text	0000004c _wcrtomb_r
00004300 g     F .text	00000180 calcur()
0000c14c g     F .text	00000014 serial3_putchar
0000a4f8 g     F .text	0000001c Print::println()
00000d58 g     F .text	00000044 BMSModuleManager::seriescells()
0000ba84 g     F .text	00000028 serial2_available
0000fa10 g     F .text	00000020 __sseek
0000f8d0 g     F .text	0000003c __sinit
0000aca8  w    F .text	00000006 uart0_lon_isr
0000c4ec g     F .text	00000080 usb_rx_memory
000018d0 g     F .text	000006c0 BMSModuleManager::clearFaults()
000151d8 g     F .text	000000b0 __swbuf_r
0000a224  w    F .text	00000008 HardwareSerial2::setTX(unsigned char, bool)
1fffb620 g     O .bss	00000004 conttimer1
0000aca8  w    F .text	00000006 dma_ch8_isr
00009a24 g     F .text	000000e6 FlexCAN::write(CAN_message_t const&)
1fffb634 g     O .bss	00000004 delim
000092b8 g     F .text	00000072 ADC_Module::setAveraging(unsigned char)
0000f3c0 g     F .text	0000000c __malloc_unlock
1fff88ec g     O .data	00000038 isr_table_portA
0000a3e4  w    F .text	00000020 HardwareSerial3::write(int)
00009944 g     F .text	000000e0 FlexCAN::writeTxRegisters(CAN_message_t const&, unsigned char)
0000b5d0 g     F .text	000000d0 serial2_end
0000a7c0 g     F .text	000000c8 analog_init
00004010 g     F .text	000000e8 Prechargecon()
0000c56c g     F .text	00000088 usb_tx
0000eb68 g     F .text	00000136 .hidden __divsf3
1fffb724 g     O .bss	00000004 outputcheck
0000aca8  w    F .text	00000006 portcd_isr
000091dc g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
0000a8c4 g     F .text	0000006c eeprom_initialize
1fffb840 g     O .bss	00000004 x
0000a370  w    F .text	00000004 HardwareSerial3::clear()
0000fa38 g     F .text	000000f8 memmove
1fff8868 g     O .data	00000004 pwmcurmax
1fffb660 g     O .bss	00000004 lasttime
00002b94 g     F .text	0000001c Logger::console(char*, ...)
00000c68 g     F .text	00000022 BMSModule::getAvgTemp()
1fffb734 g     O .bss	00000002 pwmcurmin
0000d3e8 g     F .text	000000a6 powf
00010154 g     F .text	0000004c _Balloc
1fffb690 g     O .bss	00000004 menuload
0000aca8  w    F .text	00000006 can1_rx_warn_isr
000175c4 g       .fini	00000000 __exidx_end
00000650 g     F .text	00000054 BMSModule::BMSModule()
0000edb8 g     F .text	0000004c .hidden __fixsfsi
0000aca8  w    F .text	00000006 dma_error_isr
1fffba2c g     O .bss	00000001 EventResponder::runningFromYield
0000aca8  w    F .text	00000006 i2c0_isr
1fff9194 g     O .bss	00000004 whichDisplay
0000e668 g     F .text	0000008a .hidden __gtdf2
1fff916c g     O .data	00000004 __atexit_recursive_mutex
000091dc g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
0000fd10 g     F .text	0000000c __errno
0000a338  w    F .text	00000018 HardwareSerial3::write(char const*)
00006934 g     F .text	00000064 Rx309()
0000aca8  w    F .text	00000006 portd_isr
0000aca8  w    F .text	00000006 enet_error_isr
1fffba28 g     O .bss	00000004 EventResponder::firstInterrupt
00000cc8 g     F .text	00000064 BMSModuleManager::BMSModuleManager()
1fffb668 g     O .bss	00000004 looptime1
0000a23c  w    F .text	00000004 HardwareSerial2::end()
1fffbddc g     O .bss	00000004 __stdio_exit_handler
0000a22c  w    F .text	00000006 HardwareSerial2::setRX(unsigned char)
0000aca8  w    F .text	00000006 tpm1_isr
0000d394 g     F .text	00000054 logf
0000ce08  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
1fffb5a4 g     O .bss	00000002 chargecurrent
00015288 g     F .text	0000002c _fstat_r
0001701c g     O .text	00000110 digital_pin_to_info_PGM
0000074c g     F .text	00000006 BMSModule::getFaults()
1fffbde0 g     O .bss	00000004 errno
1fffb73c g     O .bss	000000e4 settings
000175c4 g       .fini	00000000 _etext
00009f64 g     F .text	00000010 _spi_dma_rxISR0()
1fff9170 g       .bss	00000000 _sbss
0000e704 g     F .text	00000010 .hidden __aeabi_cdcmple
1fffb5ac g     O .bss	00000004 chargerendbulk
1fffb834 g     O .bss	00000004 voltage1
0000e7f0 g     F .text	00000160 .hidden __aeabi_fadd
0000e7ec g     F .text	00000164 .hidden __subsf3
0000b2ec g     F .text	0000001c digitalRead
0000aca8  w    F .text	00000006 porte_isr
1fff8830 g     O .data	00000008 bmsmanu
00007a3c g     F .text	00000d88 loop
0000aca8  w    F .text	00000006 portb_isr
000093dc g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
0000aca8  w    F .text	00000006 spi1_isr
00000cc4 g     F .text	00000004 BMSModule::setIgnoreCell(float)
0000aca8  w    F .text	00000006 uart3_status_isr
0000aca8  w    F .text	00000006 mcm_isr
00002250 g     F .text	0000000a BMSModuleManager::getBalancing()
0000a274  w    F .text	00000020 HardwareSerial2::write(int)
0000a3e0  w    F .text	00000004 HardwareSerial3::availableForWrite()
000006bc g     F .text	0000008e BMSModule::readStatus()
1fffba24 g     O .bss	00000004 EventResponder::lastInterrupt
0000bbcc g     F .text	00000184 uart1_status_isr
0000b6d8 g     F .text	0000007c serial2_set_tx
0000aabc g     F .text	000001a6 memcpy
0000aca8  w    F .text	00000006 randnum_isr
0000bb84 g     F .text	00000048 serial2_clear
0000e6f4 g     F .text	00000020 .hidden __aeabi_cdrcmple
1fff9170 g     O .data	00000000 .hidden __TMC_END__
00001550 g     F .text	00000190 BMSModuleManager::findBoards()
0000ed78 g     F .text	00000012 .hidden __aeabi_fcmpgt
00002270 g     F .text	00000004 BMSModuleManager::getPackVoltage()
000108cc g     F .text	00001ba4 _svfprintf_r
0000e594 g     F .text	00000022 .hidden __floatsidf
00002274 g     F .text	00000004 BMSModuleManager::setPstrings(int)
1fff8974 g     O .data	00000030 isr_table_portC
1fff8870 g     O .data	00000002 pwmfreq
1fffba38 g     O .bss	00000004 systick_millis_count
0000e670 g     F .text	00000082 .hidden __ltdf2
0000ac64  w    F .text	00000044 bus_fault_isr
00007734 g     F .text	00000308 chargercomms()
0000a394  w    F .text	00000008 HardwareSerial3::setTX(unsigned char, bool)
0000aca8  w    F .text	00000006 watchdog_isr
0000ad14 g     F .text	00000044 nvic_execution_priority
0000aca8  w    F .text	00000006 i2c1_isr
1fffbc30 g     O .bss	00000001 usb_configuration
1fff91ec g     O .bss	000023ac bms
000093d4 g     F .text	00000004 CANListener::frameHandler(CAN_message_t&, int, unsigned char)
0000aca8  w    F .text	00000006 dma_ch11_isr
0000d7dc g     F .text	0000027c __ieee754_logf
0000a1b0  w    F .text	0000000c HardwareSerial2::write9bit(unsigned long)
0000a2d4  w    F .text	00000020 HardwareSerial2::write(unsigned int)
0000c474  w    F .text	00000002 serialEvent2()
1fff8844 g     O .data	00000004 chargerid2
0000aca8  w    F .text	00000006 i2c2_isr
0000afa8 g     F .text	00000224 analogWrite
1fff8a6c  w    O .data	00000018 usb_string_manufacturer_name
1fffbc34 g     O .bss	00000008 usb_rx_byte_count_data
0000aca8  w    F .text	00000006 pit1_isr
0000ee44 g     F .text	00000010 malloc
0000aca8  w    F .text	00000006 dma_ch4_isr
0000aca8  w    F .text	00000006 software_isr
0000b6a0 g     F .text	00000038 serial2_set_transmit_pin
0000a040 g     F .text	00000068 FilterOnePole::input(float)
0000acf8  w    F .text	0000000a _fstat
0000aca8  w    F .text	00000006 dma_ch7_isr
00002f3c g     F .text	00000128 alarmupdate()
00009fac g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
00012878 g     F .text	00000040 __assert_func
00009e10  w    F .text	00000016 EventResponder::triggerEvent(int, void*)
0000e958 g     F .text	0000001c .hidden __aeabi_i2f
000173a8 g     O .text	000000c8 __mprec_tens
0000cd68 g     F .text	00000088 usb_init
00000c3c g     F .text	0000002a BMSModule::getHighTemp()
0000eca8 g     F .text	00000066 .hidden __lesf2
00006a1c g     F .text	0000009c CAB500()
0000bfc8 g     F .text	0000006c serial3_end
0000e7a4 g     F .text	00000040 .hidden __fixunsdfsi
0000aca8  w    F .text	00000006 lptmr_isr
00002378 g     F .text	0000004e BMSModuleManager::getAvgCellVolt()
1fffbca0 g     O .bss	00000004 __malloc_top_pad
0000aeec g     F .text	00000014 rtc_set
1fffb844 g     O .bss	0000019c Can0
0000a3a4  w    F .text	00000006 HardwareSerial3::transmitterEnable(unsigned char)
1fff9170 g       .bss	00000000 __bss_start__
00009044 g     F .text	00000090 ADC_Module::setResolution(unsigned char)
0000e574 g     F .text	0000001e .hidden __aeabi_ui2d
000126ac g     F .text	00000008 _localeconv_r
0000b534 g     F .text	0000009c serial2_format
00014b1c g     F .text	000002e8 __sfvwrite_r
000102f4 g     F .text	0000005c __i2b
00016f1c g     O .text	00000068 vtable for HardwareSerial2
0000c1f8 g     F .text	0000008c serial3_getchar
1fff8720 g       .data	00000000 _sdata
0000e2f0 g     F .text	00000000 .hidden __aeabi_drsub
0000d490 g     F .text	00000010 finitef
0000fcc0 g     F .text	00000024 _sbrk_r
00000b08 g     F .text	0000000c BMSModule::getCellVoltage(int)
0000a384  w    F .text	00000010 HardwareSerial3::attachRts(unsigned char)
000001bc g     F .text	000001c8 ResetHandler
0000bd88 g     F .text	00000020 serial2_add_memory_for_write
1fffb820 g     O .bss	00000004 storagemode
0000cea8 g     F .text	00000048 usb_serial_getchar
0000aca8  w    F .text	00000006 can1_bus_off_isr
00006d4c g     F .text	000004e8 currentlimit()
0000962c g     F .text	00000062 FlexCAN::setMask(unsigned long, unsigned char)
0000aca8  w    F .text	00000006 ftm2_isr
1fffbc4c g     O .bss	00000008 usb_cdc_line_coding
0000b2a0 g     F .text	0000004c digitalWrite
0000e1ec g     F .text	00000006 fabsf
0000aca8  w    F .text	00000006 uart5_status_isr
0000aca8  w    F .text	00000006 lpuart0_status_isr
1fffba30 g     O .bss	00000004 EventResponder::lastYield
00016e0c g     O .text	0000002c ADC::channel2sc1aADC0
00000c10 g     F .text	0000002a BMSModule::getLowTemp()
0000fc94 g     F .text	0000002c _read_r
000171a8 g     O .text	00000004 usb_endpoint_config_table
0000aca8  w    F .text	00000006 dma_ch9_isr
1fffb694 g     O .bss	00000010 msg
0000aca8  w    F .text	00000006 pit2_isr
0000b458 g     F .text	000000dc serial2_begin
0000e728 g     F .text	00000012 .hidden __aeabi_dcmplt
0000c1d0 g     F .text	00000028 serial3_available
00012470 g     F .text	000000c6 _fclose_r
1fffbc98 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a200  w    F .text	00000004 HardwareSerial2::clear()
0000b308 g     F .text	00000078 pinMode
1fffb65c g     O .bss	00000004 lastUpdate
0000ce58 g     F .text	00000050 usb_free
0000a540 g     F .text	000001c0 Print::printFloat(double, unsigned char)
0000aca8  w    F .text	00000006 i2c3_isr
0000e5b8 g     F .text	00000042 .hidden __extendsfdf2
1fffb6a4 g     O .bss	00000080 msgString
0001552c g     F .text	000001d0 .hidden __aeabi_ddiv
1fffb66c g     O .bss	00000020 lowpassFilter
1fff8848 g     O .data	00000004 debug
0000e2fc g     F .text	00000276 .hidden __adddf3
0000ecb0 g     F .text	0000005e .hidden __nesf2
0000b834 g     F .text	000000f8 serial2_putchar
00001fbc g     F .text	00000294 BMSModuleManager::getAllVoltTemp()
0000a268  w    F .text	00000004 HardwareSerial2::available()
0000baac g     F .text	0000008c serial2_getchar
000175c4 g       .fini	00000000 __exidx_start
000152d8 g     F .text	00000254 .hidden __aeabi_dmul
0000aca8  w    F .text	00000006 pit0_isr
0000a350  w    F .text	00000010 HardwareSerial3::write(unsigned char const*, unsigned int)
0000ad04  w    F .text	00000004 _isatty
1fffba20 g     O .bss	00000004 EventResponder::firstYield
000090d4 g     F .text	00000108 ADC_Module::analog_init()
1fff8824 g     O .data	00000001 Logger::logLevel
1fffb640 g     O .bss	00000010 inMsg
00001f90 g     F .text	0000002c BMSModuleManager::StopBalancing()
0000a404  w    F .text	00000020 HardwareSerial3::write(unsigned long)
0000aca8  w    F .text	00000006 can1_error_isr
0000f3cc g     F .text	000003d8 _realloc_r
00000cb4 g     F .text	00000006 BMSModule::settempsensor(int)
0000fd1c g     F .text	00000048 __libc_init_array
1fffbf84 g       .bss	00000000 __bss_end
00009e00 g     F .text	00000002 can0_wakeup_isr
1fffb5a8 g     O .bss	00000004 chargerend
0000a1c8  w    F .text	00000018 HardwareSerial2::write(char const*)
0000aca8  w    F .text	00000006 flash_cmd_isr
0000a1e0  w    F .text	00000010 HardwareSerial2::write(unsigned char const*, unsigned int)
0000be94 g     F .text	00000098 serial3_begin
00014f7c g     F .text	00000066 _fputwc_r
00017380 g     O .text	00000028 __mprec_bigtens
0000ad10  w    F .text	00000002 abort
0000cdf0  w    F .text	00000004 usb_serial_class::clear()
0000e574 g     F .text	0000001e .hidden __floatunsidf
0000c2f4 g     F .text	00000128 uart2_status_isr
0000acc0  w    F .text	0000002c _sbrk
0001065c g     F .text	0000003e __mcmp
0000ae04 g     F .text	000000e8 attachInterrupt
1fff88e4 g     O .data	00000004 __brkval
1fffbc54 g     O .bss	00000001 usb_cdc_line_rtsdtr
0000d148 g     F .text	00000048 usb_serial_flush_callback
000073ac g     F .text	00000360 dashupdate()
1fffb624 g     O .bss	00000004 conttimer2
0000a240  w    F .text	00000020 HardwareSerial2::begin(unsigned long, unsigned long)
000175a0 g     F .text	00000000 _init
1fff91e0 g     O .bss	00000004 alarm
0000d598 g     F .text	00000244 __ieee754_expf
1fffb598 g     O .bss	00000001 bmsstatus
0000c160 g     F .text	00000028 serial3_write
0000a360  w    F .text	00000008 HardwareSerial3::addMemoryForWrite(void*, unsigned int)
0000aca8  w    F .text	00000006 svcall_isr
0000a964 g     F .text	0000004c eeprom_write_byte
0000aca8  w    F .text	00000006 dma_ch15_isr
00002c6c g     F .text	00000028 Logger::info(char*, ...)
1fffb5a6 g     O .bss	00000001 chargecurrentlimit
00002370 g     F .text	00000004 BMSModuleManager::getHighTemperature()
0000e7ec g     F .text	00000164 .hidden __aeabi_fsub
000029dc g     F .text	0000000c Logger::setLoglevel(Logger::LogLevel)
0000aca8  w    F .text	00000006 uart1_error_isr
000126b4 g     F .text	00000028 __libc_fini_array
0000b1cc g     F .text	000000d4 analogWriteFrequency
0000aca8  w    F .text	00000006 usbhs_phy_isr
1fffb68c g     O .bss	00000004 mainconttimer
1fffbf84 g       .bss	00000000 _ebss
1fff88cc g     O .data	00000014 Serial3
000095a8 g     F .text	00000084 FlexCAN::setFilter(CAN_filter_t const&, unsigned char)
1fff8854 g     O .data	00000004 firmver
0000a3ac  w    F .text	00000004 HardwareSerial3::end()
0000ed8c g     F .text	0000002c .hidden __aeabi_fcmpun
1fffb5b8 g     O .bss	00000060 console
00010254 g     F .text	00000040 __hi0bits
1fff91a5 g     O .bss	00000001 CanOnRev
00008d08 g     F .text	0000005c ADC::ADC()
0000ed64 g     F .text	00000012 .hidden __aeabi_fcmpge
000156fc g     F .text	0000004e .hidden __fixdfsi
0000a1f8  w    F .text	00000008 HardwareSerial2::addMemoryForRead(void*, unsigned int)
0000aca8 g     F .text	00000006 unused_isr
000016e0 g     F .text	000001f0 BMSModuleManager::renumberBoardIDs()
0000a374  w    F .text	00000010 HardwareSerial3::attachCts(unsigned char)
0000aca8  w    F .text	00000006 spi0_isr
0000c41c g     F .text	00000038 serial3_add_memory_for_read
1fffbde8 g     O .bss	00000001 __lock___malloc_recursive_mutex
0000a3d4  w    F .text	00000004 HardwareSerial3::read()
0000e984 g     F .text	0000007c .hidden __floatdisf
0000aca8  w    F .text	00000006 dma_ch3_isr
1fff919c g     O .bss	00000001 CPdebug
1fffb618 g     O .bss	00000004 contctrl
1fffbca4 g     O .bss	00000138 __sf
00006b34 g     F .text	00000218 canread()
0000eca0 g     F .text	0000006e .hidden __gtsf2
0000aca8  w    F .text	00000006 flash_error_isr
0000e2fc g     F .text	00000276 .hidden __aeabi_dadd
1fff91d8 g     O .bss	00000002 accurlim
0000e670 g     F .text	00000082 .hidden __ledf2
0000ed50 g     F .text	00000012 .hidden __aeabi_fcmple
0000aca8  w    F .text	00000006 uart5_error_isr
0000aca8  w    F .text	00000006 rtc_seconds_isr
00016ea0 g     O .text	00000078 SPIClass::spi0_hardware
0000aca8  w    F .text	00000006 pdb_isr
000104ac g     F .text	000000c0 __pow5mult
0000e5fc g     F .text	0000006a .hidden __aeabi_ul2d
0000ac64  w    F .text	00000044 usage_fault_isr
0000aca8  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001bc _VectorsFlash
0000aca8  w    F .text	00000006 dma_ch14_isr
1fffb664 g     O .bss	00000004 looptime
1fffb658 g     O .bss	00000004 inputcheck
1fffbc58 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000d280 g     F .text	00000050 HardwareSerial::addToSerialEventsList()
00000458  w    F .text	000001f8 BMSUtil::sendDataWithReply(unsigned char*, unsigned char, bool, unsigned char*, int)
0000a174 g     F .text	00000010 systick_isr
0000c188 g     F .text	00000018 serial3_flush
0000aca8  w    F .text	00000006 rtc_alarm_isr
0000fd70 g     F .text	00000002 __retarget_lock_release_recursive
0000a214  w    F .text	00000010 HardwareSerial2::attachRts(unsigned char)
0000aca8  w    F .text	00000006 dma_ch2_isr
1fff89f8 g     O .data	00000010 Serial
1fff8850 g     O .data	00000004 filterFrequency
0000aca8  w    F .text	00000006 ftm1_isr
0000e2e0 g     F .text	00000008 .hidden __math_uflowf
0000ce10  w    F .text	00000006 usb_serial_class::write(unsigned char)
0000c034 g     F .text	00000038 serial3_set_transmit_pin
0000acb0  w    F .text	0000000c startup_early_hook
0000aca8  w    F .text	00000006 dma_ch13_isr
1fff9188 g     O .bss	00000004 Logger::lastLogTime
0000a26c  w    F .text	00000004 HardwareSerial2::flush()
1fff9198 g     O .bss	00000004 CANmilliamps
0000aca8  w    F .text	00000006 uart2_error_isr
0000cef0 g     F .text	00000030 usb_serial_peekchar
0000e764 g     F .text	00000012 .hidden __aeabi_dcmpgt
1fff8858 g     O .data	00000004 maxac1
0000c454 g     F .text	00000020 serial3_add_memory_for_write
0000f90c g     F .text	0000000c __sfp_lock_acquire
000126e0 g     F .text	00000000 memchr
0000c0c4 g     F .text	00000002 serial3_set_rx
1fffbf84 g       .bss	00000000 __bss_end__
1fff8a9c g     O .data	00000016 usb_string_serial_number_default
0000ac64 g     F .text	00000044 fault_isr
0000ff1c g     F .text	0000020c _free_r
1fff91a4 g     O .bss	00000001 CanOnReq
0000fc38 g     F .text	0000000c __locale_mb_cur_max
0001395c g     F .text	0000001a _wcsrtombs_r
0000e750 g     F .text	00000012 .hidden __aeabi_dcmpge
0000aca8  w    F .text	00000006 usb_charge_isr
1fffbdf4 g     O .bss	00000190 __atexit0
0000ce00  w    F .text	00000004 usb_serial_class::flush()
1fff91c0 g     O .bss	00000004 Pretimer1
0000aca8  w    F .text	00000006 cmt_isr
0000e2f8 g     F .text	0000027a .hidden __aeabi_dsub
00002674 g     F .text	00000368 BMSModuleManager::printAllCSV(unsigned long, float, int, int)
0000aca8  w    F .text	00000006 usbhs_isr
00009fac g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
1fff8ec4 g     O .data	00000004 __malloc_sbrk_base
1fffb63a g     O .bss	00000002 duration
0000cdf8  w    F .text	00000004 usb_serial_class::read()
0000aca8  w    F .text	00000006 ftm3_isr
1fff91b0 g     O .bss	00000004 Discharge
00007234 g     F .text	000000cc inputdebug()
0000aca8  w    F .text	00000006 tsi0_isr
0000e5fc g     F .text	0000006a .hidden __floatundidf
0000ad08  w    F .text	00000006 _lseek
0001056c g     F .text	000000f0 __lshift
0000aca8  w    F .text	00000006 spi2_isr
1fff8838 g     O .data	00000008 bmsname
0000e958 g     F .text	0000001c .hidden __floatsisf
000139a0 g     F .text	00000100 __ssprint_r
0000d2d0  w    F .text	00000002 serialEvent()
1fffbc31 g     O .bss	00000001 usb_reboot_timer
000127f0 g     F .text	00000088 __register_exitproc
0000932c g     F .text	00000018 ADC_Module::checkPin(unsigned char)
0000a930 g     F .text	00000034 eeprom_read_byte
1fffb838 g     O .bss	00000004 voltage2
1fffb5b0 g     O .bss	00000002 chargerpower
0000cf4c g     F .text	00000038 usb_serial_flush_input
00010350 g     F .text	0000015c __multiply
1fff89c4 g     O .data	00000008 isr_table_portE
0000d08c g     F .text	0000001a usb_serial_putchar
00000021 g       *ABS*	00000000 _teensy_model_identifier
1fff91dc g     O .bss	00000004 adc
0000edb8 g     F .text	0000004c .hidden __aeabi_f2iz
0000fbd4 g     F .text	00000064 strncpy
000011f0 g     F .text	00000360 BMSModuleManager::setupBoards()
1fffbc70 g     O .bss	00000028 __malloc_current_mallinfo
1fff91c4 g     O .bss	00000004 RawCur
0000ecb0 g     F .text	0000005e .hidden __eqsf2
000107f0 g     F .text	000000c0 __d2b
1fffbc60 g     O .bss	0000000c HardwareSerial::s_serials_with_serial_events
00009de8 g     F .text	00000002 can0_bus_off_isr
0000b92c g     F .text	00000110 serial2_write
00000754 g     F .text	00000006 BMSModule::getAlerts()
0000a1bc  w    F .text	0000000c HardwareSerial2::write(unsigned char)
0000a294  w    F .text	00000020 HardwareSerial2::write(unsigned long)
0000ba54 g     F .text	00000030 serial2_write_buffer_free
1fffbc3c g     O .bss	00000001 usb_rx_memory_needed
0000076c g     F .text	00000038 BMSModule::stopBalance()
0000c5f4 g     F .text	00000774 usb_isr
1fff91bc g     O .bss	00000004 Pretimer
0000eb68 g     F .text	00000136 .hidden __aeabi_fdiv
0000fc44 g     F .text	00000024 _close_r
0000e594 g     F .text	00000022 .hidden __aeabi_i2d
0000a7b8 g     F .text	00000006 Stream::parseInt()
00002c94 g     F .text	00000028 Logger::error(char*, ...)
000040f8 g     F .text	00000208 contcon()
1fffb9e8 g     O .bss	00000038 SPI
000093dc g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
1fff89f6 g     O .data	00000001 _serialEvent3_default
0001712c  w    O .text	00000028 vtable for usb_serial_class
0000aca8  w    F .text	00000006 uart3_error_isr
00004480 g     F .text	00000350 VEcan()
0000fd68 g     F .text	00000002 __retarget_lock_close_recursive
00016e08 g     O .text	00000004 ADC::diff_table_ADC1
1fffb72c g     O .bss	00000004 overtriptimer
0000e974 g     F .text	0000008c .hidden __floatundisf
0000a700 g     F .text	00000040 Stream::timedPeek()
0000075c g     F .text	00000006 BMSModule::getCOVCells()
00014e04 g     F .text	000000cc __swsetup_r
0000aca8  w    F .text	00000006 porta_isr
1fffb654 g     O .bss	00000004 incomingByte
0001552c g     F .text	000001d0 .hidden __divdf3
1fff83bc g     O .usbbuffers	00000360 usb_buffer_memory
000087c4 g     F .text	00000038 low_voltage_isr
1fff8abc g     O .data	00000408 __malloc_av_
0000e950 g     F .text	00000024 .hidden __aeabi_ui2f
1fffbdf0 g     O .bss	00000004 __atexit
00009dec g     F .text	0000000c can0_error_isr
0000af04 g     F .text	000000a4 _init_Teensyduino_internal_
1fff91c8 g     O .bss	00000004 SOCmem
000152d8 g     F .text	00000254 .hidden __muldf3
0000da58 g     F .text	00000794 __ieee754_powf
0000f9ac g     F .text	00000022 __sread
00009454 g     F .text	00000024 FlexCAN::end()
0000c2d0 g     F .text	00000024 serial3_clear
00003d44 g     F .text	000002cc updateSOC()
0000d0f0 g     F .text	00000058 usb_serial_flush_output
0000aca8  w    F .text	00000006 dma_ch12_isr
1fff91a8 g     O .bss	00000004 CanOntimeout
0000f3b4 g     F .text	0000000c __malloc_lock
0000aca8  w    F .text	00000006 can1_wakeup_isr
0000e1f4 g     F .text	000000b0 scalbnf
00002374 g     F .text	00000004 BMSModuleManager::getLowTemperature()
1fff8200 g     O .dmabuffers	000001bc _VectorsRam
00012658 g     F .text	00000054 _fflush_r
000128b8 g     F .text	00000078 _calloc_r
0000a184 g     F .text	0000002c HardwareSerial2::begin(unsigned long)
0000aca8  w    F .text	00000006 pit3_isr
0000ecb0 g     F .text	0000005e .hidden __cmpsf2
1fff8a0c g     O .data	00000001 yield_active_check_flags
0000aca8  w    F .text	00000006 enet_rx_isr
0000fd6c g     F .text	00000002 __retarget_lock_acquire_recursive
0000aca8  w    F .text	00000006 portc_isr
0000fb30 g     F .text	000000a4 memset
0000d4a8 g     F .text	000000f0 __ieee754_sqrtf
0000aaac g     F .text	00000010 main
000007a4 g     F .text	00000362 BMSModule::readModuleValues()
1fffbc9c g     O .bss	00000004 __malloc_max_total_mem
0000fd64 g     F .text	00000002 __retarget_lock_init_recursive
0000bb38 g     F .text	0000004c serial2_peek
0000e984 g     F .text	0000007c .hidden __aeabi_l2f
0000b7b0 g     F .text	00000044 serial2_set_rts
00009478 g     F .text	000000c8 FlexCAN::setBaudRate(unsigned long)
0000eca8 g     F .text	00000066 .hidden __ltsf2
0000ac64  w    F .text	00000044 memmanage_fault_isr
0000c10c g     F .text	00000040 serial3_set_cts
0000fa30 g     F .text	00000008 __sclose
0000d2d4 g     F .text	00000070 usb_init_serialnumber
000175c0 g       .text	00000000 __init_array_end
000006a4 g     F .text	00000016 BMSModule::clearmodule()
000098ac g     F .text	00000096 FlexCAN::read(CAN_message_t&)
00012a58 g     F .text	00000eb8 _dtoa_r
0000ee54 g     F .text	00000560 _malloc_r
1fffbc6c g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
0000aca8  w    F .text	00000006 debugmonitor_isr
000108b0 g     F .text	0000001a __ascii_wctomb
0000e60c g     F .text	0000005a .hidden __aeabi_l2d
1fff89a4 g     O .data	00000020 isr_table_portD
0000b7f4 g     F .text	00000040 serial2_set_cts
0000a0a8 g     F .text	00000084 EventResponder::triggerEventNotImmediate()
0000a320  w    F .text	0000000c HardwareSerial3::write9bit(unsigned long)
645c2179 g       *ABS*	00000000 __rtc_localtime
0000b380 g     F .text	00000040 micros
1fff91b8 g     O .bss	00000004 OverTime
0000e974 g     F .text	0000008c .hidden __aeabi_ul2f
0000aca8  w    F .text	00000006 cmp1_isr
0000aca8  w    F .text	00000006 ftm0_isr
0000a204  w    F .text	00000010 HardwareSerial2::attachCts(unsigned char)
0000ed18 g     F .text	00000010 .hidden __aeabi_cfcmple
1fffb628 g     O .bss	00000004 conttimer3
0000fe7c g     F .text	000000a0 _malloc_trim_r
1fffb738 g     O .bss	00000004 renum
00014fe4 g     F .text	000000f8 _wcsnrtombs_l
1fff8a68 g     O .data	00000004 string0
0000cf84 g     F .text	00000108 usb_serial_write
0000ea00 g     F .text	00000168 .hidden __mulsf3
0000acbc  w    F .text	00000002 startup_late_hook
0000a3d0  w    F .text	00000004 HardwareSerial3::peek()
00009fe8 g     F .text	00000058 FilterOnePole::output()
0000cdfc  w    F .text	00000004 usb_serial_class::available()
0000a444  w    F .text	00000020 HardwareSerial3::write(unsigned int)
00016f18  w    O .text	00000001 _serialEvent_default
00000c08 g     F .text	00000006 BMSModule::getscells()
0000c1a0 g     F .text	00000030 serial3_write_buffer_free
0000a3b0  w    F .text	00000020 HardwareSerial3::begin(unsigned long, unsigned long)
0000a424  w    F .text	00000020 HardwareSerial3::write(long)
1fff8a84  w    O .data	00000016 usb_string_product_name
0000b3c0 g     F .text	00000098 delay
0000e678 g     F .text	0000007a .hidden __nedf2
0000aca8  w    F .text	00000006 tpm0_isr
00009380 g     F .text	00000054 ADC_Module::startContinuous(unsigned char)
000175c0 g     F .fini	00000000 _fini
1fff91a0 g     O .bss	00000004 CSVdebug
00006998 g     F .text	00000084 CAB300()
00016e04 g     O .text	00000004 ADC::diff_table_ADC0
0000225c g     F .text	00000004 BMSModuleManager::getLowCellVolt()
0000f96c g     F .text	00000040 sprintf
0000aca8  w    F .text	00000006 i2s0_rx_isr
0000aca8  w    F .text	00000006 uart4_error_isr
0000a4e8 g     F .text	00000010 Print::print(long)
1fffb828 g     O .bss	00000004 testcount
0000fe70 g     F .text	0000000c atexit
00008d08 g     F .text	0000005c ADC::ADC()
0000eca0 g     F .text	0000006e .hidden __gesf2
000150dc g     F .text	00000024 _wcsnrtombs_r
0000fce4 g     F .text	0000002c _write_r
0000e7e4 g     F .text	0000016c .hidden __aeabi_frsub
000022b4 g     F .text	000000bc BMSModuleManager::getAvgTemperature()
1fffb638 g     O .bss	00000002 discurrent
00009ddc g     F .text	0000000c can0_message_isr
0000d4a0 g     F .text	00000008 nanf
1fff9168 g     O .data	00000004 _impure_ptr
0000aca8  w    F .text	00000006 can1_message_isr
0000ed28 g     F .text	00000012 .hidden __aeabi_fcmpeq
00012538 g     F .text	0000011e __sflush_r
0000aca8  w    F .text	00000006 nmi_isr
00000c8c g     F .text	00000004 BMSModule::getModuleVoltage()
0000a260  w    F .text	00000004 HardwareSerial2::peek()
0000ea00 g     F .text	00000168 .hidden __aeabi_fmul
00000ca0 g     F .text	0000000a BMSModule::setAddress(int)
0000f924 g     F .text	00000046 _fwalk_sglue
000175ac g       .text	00000000 __preinit_array_end
00000d9c g     F .text	00000454 BMSModuleManager::balanceCells(int, int)
00008f58 g     F .text	000000ec ADC_Module::wait_for_cal()
0000ed10 g     F .text	00000018 .hidden __aeabi_cfrcmple
0000a1f0  w    F .text	00000008 HardwareSerial2::addMemoryForWrite(void*, unsigned int)
0000aca8  w    F .text	00000006 sdhc_isr
00016f84 g     O .text	00000068 vtable for HardwareSerial3
0000a3dc  w    F .text	00000004 HardwareSerial3::flush()
00000b4c g     F .text	0000003c BMSModule::getHighCellV()
00000cac g     F .text	00000006 BMSModule::isExisting()
00000b88 g     F .text	00000080 BMSModule::getAverageV()
00010128 g     F .text	0000002a __ascii_mbtowc
00009210 g     F .text	000000a8 ADC_Module::setSamplingSpeed(ADC_settings::ADC_SAMPLING_SPEED)
00006ab8 g     F .text	0000007c handleVictronLynx()
1fff91b4 g     O .bss	00000001 OutputEnable
1fffb824 g     O .bss	00000002 tempchargecurrent
00008844 g     F .text	000004c4 setup
00017154 g     O .text	00000054 usb_descriptor_list
0000c47c g     F .text	00000044 usb_rx
000029e8 g     F .text	00000010 Logger::isDebug()
00000b14 g     F .text	00000038 BMSModule::getLowCellV()
00009344 g     F .text	0000003c ADC_Module::startReadFast(unsigned char)
0000aca8  w    F .text	00000006 dma_ch10_isr
000029f8 g     F .text	0000019c Logger::logMessage(char*, std::__va_list)
1fffb630 g     O .bss	00000004 debugCur
1fff91d4 g     O .bss	00000004 UnderTimer
0000e7a4 g     F .text	00000040 .hidden __aeabi_d2uiz
0000aca8  w    F .text	00000006 uart0_error_isr
1fff8874 g     O .data	00000004 sensor
00009ba8 g     F .text	00000234 FlexCAN::message_isr()
0000ce18 g     F .text	00000040 usb_malloc
00000650 g     F .text	00000054 BMSModule::BMSModule()
0000ed3c g     F .text	00000012 .hidden __aeabi_fcmplt
0000aca8  w    F .text	00000006 i2s0_isr
1fffb83c g     O .bss	00000004 warning
20008000 g       .bss	00000000 _estack
0000d0a8 g     F .text	00000048 usb_serial_write_buffer_free
00002278 g     F .text	0000003a BMSModuleManager::setSensors(int, float)
0000aca8  w    F .text	00000006 enet_timer_isr
00008d64 g     F .text	000000aa ADC::startContinuous(unsigned char, signed char)
0000e714 g     F .text	00000012 .hidden __aeabi_dcmpeq
1fff8ecc g     O .data	0000000c __sglue
0000a514  w    F .text	00000014 _write
1fff9170 g       .data	00000000 _edata
1fffb5a0 g     O .bss	00000004 cellspresent
0000aca8  w    F .text	00000006 i2s0_tx_isr
0000aca8  w    F .text	00000006 adc1_isr
0000ed8c g     F .text	0000002c .hidden __unordsf2
00009690 g     F .text	000001b8 FlexCAN::begin(unsigned long, CAN_filter_t const&, unsigned char, unsigned char)
00014ed0 g     F .text	000000ac __fputwc
0000ce04  w    F .text	00000004 usb_serial_class::availableForWrite()
1fff9190 g     O .bss	00000001 printPrettyDisplay
0000aca8  w    F .text	00000006 cmp0_isr
00016e38 g     O .text	0000002c ADC::channel2sc1aADC1
00002bb0 g     F .text	00000098 Logger::log(Logger::LogLevel, char*, std::__va_list)
1fff886c g     O .data	00000004 pwmcurmid
00009540 g     F .text	00000066 FlexCAN::setNumTxBoxes(unsigned char)
0000ad60 g     F .text	0000005c ultoa
0000ee04 g     F .text	0000003e .hidden __aeabi_f2uiz
1fff885c g     O .data	00000004 maxac2
0000b754 g     F .text	0000005c serial2_set_rx
0000f9d0 g     F .text	0000003e __swrite
0000ad58 g     F .text	00000004 operator new(unsigned int)
0000a12c g     F .text	00000044 EventResponder::runFromInterrupt()
1fff8ec8 g     O .data	00000004 __malloc_trim_threshold
0000cdf4  w    F .text	00000004 usb_serial_class::peek()
00000c90 g     F .text	0000000e BMSModule::getTemperature(int)
1fff8860 g     O .data	00000004 ncharger
00013978 g     F .text	00000028 fiprintf
00013b18 g     F .text	00000f84 _vfiprintf_r
0000e950 g     F .text	00000024 .hidden __floatunsisf
0001069c g     F .text	00000154 __mdiff
00002260 g     F .text	0000000a BMSModuleManager::getNumModules()
000156fc g     F .text	0000004e .hidden __aeabi_d2iz
00002cbc g     F .text	0000002c SerialConsole::SerialConsole()
0000a264  w    F .text	00000004 HardwareSerial2::read()
1fffbc5c g     O .bss	00000001 usb_cdc_transmit_flush_timer
1fffb82c g     O .bss	00000004 undertriptimer
1fff9048 g     O .data	00000120 _impure_data
0000ed18 g     F .text	00000010 .hidden __aeabi_cfcmpeq
0000c0c8 g     F .text	00000044 serial3_set_rts
00003064 g     F .text	00000230 gaugeupdate()
0000aca8  w    F .text	00000006 pit_isr
0000f918 g     F .text	0000000c __sfp_lock_release
1fffb63c g     O .bss	00000004 gaugedebug
1fff89f5 g     O .data	00000001 _serialEvent2_default
0000a888 g     F .text	0000003c analogWriteDAC0
00002c48 g     F .text	00000024 Logger::debug(char*, ...)
000093d8 g     F .text	00000002 CANListener::txHandler(int, unsigned char)
000171c4 g     O .text	00000101 _ctype_
0000aca8  w    F .text	00000006 dac0_isr
0000ba3c g     F .text	00000018 serial2_flush
1fffb59c g     O .bss	00000004 candebug
0000acec  w    F .text	00000004 _read
000175ac g       .text	00000000 __init_array_start
0000aca8  w    F .text	00000006 can1_tx_warn_isr
1fffb9e0 g     O .bss	00000008 FlexCAN::defaultMask
0000e778 g     F .text	0000002c .hidden __unorddf2
00000cbc g     F .text	00000006 BMSModule::setExists(bool)
0000ee04 g     F .text	0000003e .hidden __fixunssfsi
1fff8878 g     O .data	0000003f bitTimingTable
1fff91d0 g     O .bss	00000004 SOCtest
0000a234  w    F .text	00000006 HardwareSerial2::transmitterEnable(unsigned char)
0000aca8  w    F .text	00000006 uart0_status_isr
0000aca8  w    F .text	00000006 mcg_isr
0000d344 g     F .text	00000050 expf
0000c284 g     F .text	0000004c serial3_peek
00008e14 g     F .text	00000142 ADC_Module::setConversionSpeed(ADC_settings::ADC_CONVERSION_SPEED)
1fff8864 g     O .data	00000004 pulltime
0000a740 g     F .text	00000076 Stream::parseInt(char)
0000bd50 g     F .text	00000038 serial2_add_memory_for_read
00003748 g     F .text	000005fc getcurrent()
00000400 g     O .text	00000010 flashconfigbytes
00015100 g     F .text	000000d8 __smakebuf_r
0000e2e8 g     F .text	00000008 .hidden __math_oflowf
0000fd80 g     F .text	000000dc strlen
0000e704 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000e668 g     F .text	0000008a .hidden __gedf2
0000770c g     F .text	00000028 balancing()
1fff8a84 g     O .data	00000016 usb_string_product_name_default
1fff91e4 g     O .bss	00000004 ampsecond
1fffb61c g     O .bss	00000004 contstat
1fff884c g     O .data	00000004 debugdigits
0000aca8  w    F .text	00000006 dma_ch1_isr
1fff91cc g     O .bss	00000004 SOCset
00000cc8 g     F .text	00000064 BMSModuleManager::BMSModuleManager()
0000c4c0 g     F .text	0000002c usb_tx_packet_count
0000a2b4  w    F .text	00000020 HardwareSerial2::write(long)
00009848 g     F .text	00000064 FlexCAN::available()
000023c8 g     F .text	000002ac BMSModuleManager::printPackDetails(int)
1fffb650 g     O .bss	00000004 inbox
0000af00  w    F .text	00000002 startup_middle_hook
0000e5b8 g     F .text	00000042 .hidden __aeabi_f2d
0000aca8  w    F .text	00000006 dma_ch5_isr
1fff8840 g     O .data	00000004 chargerid1
00009dfc g     F .text	00000002 can0_rx_warn_isr
0000a9b0 g     F .text	000000fc eeprom_write_block
00000d2c g     F .text	0000002c BMSModuleManager::clearmodules()
00002ce8 g     F .text	0000005c isrCP()
0000a3d8  w    F .text	00000004 HardwareSerial3::available()
00009df8 g     F .text	00000002 can0_tx_warn_isr
0000aca8  w    F .text	00000006 uart4_status_isr
1fff91e8 g     O .bss	00000004 balancecells
0000e2f8 g     F .text	0000027a .hidden __subdf3
000175ac g       .text	00000000 __preinit_array_start
00002cbc g     F .text	0000002c SerialConsole::SerialConsole()
00009b0c g     F .text	0000009a FlexCAN::readRxRegisters(CAN_message_t&, unsigned char)
00010294 g     F .text	0000005e __lo0bits
0000a368  w    F .text	00000008 HardwareSerial3::addMemoryForRead(void*, unsigned int)
00003294 g     F .text	000004b4 printbmsstat()
0000226c g     F .text	00000004 BMSModuleManager::getHighCellVolt()
1fffb728 g     O .bss	00000004 outputstate
0000c06c g     F .text	00000058 serial3_set_tx
0000c478  w    F .text	00000002 serialEvent3()
1fffb62c g     O .bss	00000004 currentact
00012780 g     F .text	00000070 frexp
0000aca8  w    F .text	00000006 cmp2_isr
0000e7f0 g     F .text	00000160 .hidden __addsf3
0000a170 g     F .text	00000004 pendablesrvreq_isr
0000a270  w    F .text	00000004 HardwareSerial2::availableForWrite()
1fff8ed8 g     O .data	0000016c __global_locale
1fff8924 g     O .data	00000050 isr_table_portB
0000aca8  w    F .text	00000006 wakeup_isr
0000a39c  w    F .text	00000006 HardwareSerial3::setRX(unsigned char)
1fffbdec g     O .bss	00000001 __lock___sfp_recursive_mutex
0000aca8  w    F .text	00000006 cmp3_isr
0000a528 g     F .text	00000014 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000bf2c g     F .text	0000009c serial3_format
1fff882c g     O .data	00000002 SOH
0000acf0  w    F .text	00000006 _close
1fff8828 g     O .data	00000004 SOC
0000aca8  w    F .text	00000006 tpm2_isr
000101b4 g     F .text	000000a0 __multadd
1fffb830 g     O .bss	00000004 value
000101a0 g     F .text	00000012 _Bfree
1fff88b8 g     O .data	00000014 Serial2
0000aca8  w    F .text	00000006 dma_ch0_isr
1fff8a9c  w    O .data	00000016 usb_string_serial_number
1fff918c g     O .bss	00000004 prettyCounter
0000aca8  w    F .text	00000006 enet_tx_isr
1fffb5b4 g     O .bss	00000004 cleartime


